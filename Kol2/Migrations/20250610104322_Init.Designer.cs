// <auto-generated />
using System;
using Kol2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kol2.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250610104322_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kol2.Models.Map", b =>
                {
                    b.Property<int>("MapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MapId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MapId");

                    b.ToTable("Maps");

                    b.HasData(
                        new
                        {
                            MapId = 1,
                            Name = "costam",
                            Type = "classic"
                        },
                        new
                        {
                            MapId = 2,
                            Name = "cosinnego",
                            Type = "war"
                        });
                });

            modelBuilder.Entity("Kol2.Models.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatchId"));

                    b.Property<decimal?>("BestRating")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.Property<int>("Team1Score")
                        .HasColumnType("int");

                    b.Property<int>("Team2Score")
                        .HasColumnType("int");

                    b.Property<int>("TournamentId")
                        .HasColumnType("int");

                    b.HasKey("MatchId");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            MatchId = 1,
                            BestRating = 4m,
                            DateTime = new DateTime(2025, 6, 10, 12, 43, 21, 554, DateTimeKind.Local).AddTicks(7057),
                            MapId = 1,
                            Team1Score = 1,
                            Team2Score = 3,
                            TournamentId = 1
                        },
                        new
                        {
                            MatchId = 2,
                            BestRating = 2m,
                            DateTime = new DateTime(2025, 6, 10, 12, 43, 21, 556, DateTimeKind.Local).AddTicks(3635),
                            MapId = 2,
                            Team1Score = 5,
                            Team2Score = 2,
                            TournamentId = 2
                        });
                });

            modelBuilder.Entity("Kol2.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            BirthDate = new DateTime(2025, 6, 10, 12, 43, 21, 556, DateTimeKind.Local).AddTicks(5053),
                            FirstName = "John",
                            LastName = "Smith"
                        },
                        new
                        {
                            PlayerId = 2,
                            BirthDate = new DateTime(2025, 6, 10, 12, 43, 21, 556, DateTimeKind.Local).AddTicks(5293),
                            FirstName = "Simon",
                            LastName = "High"
                        });
                });

            modelBuilder.Entity("Kol2.Models.PlayerMatch", b =>
                {
                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Mvps")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rating")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal");

                    b.HasKey("MatchId", "PlayerId");

                    b.ToTable("PlayerMatches");

                    b.HasData(
                        new
                        {
                            MatchId = 1,
                            PlayerId = 1,
                            Mvps = 1,
                            Rating = 2m
                        },
                        new
                        {
                            MatchId = 2,
                            PlayerId = 2,
                            Mvps = 2,
                            Rating = 2m
                        });
                });

            modelBuilder.Entity("Kol2.Models.Tournament", b =>
                {
                    b.Property<int>("TournamentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TournamentId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TournamentId");

                    b.ToTable("Tournaments");

                    b.HasData(
                        new
                        {
                            TournamentId = 1,
                            EndDate = new DateTime(2025, 6, 17, 12, 43, 21, 556, DateTimeKind.Local).AddTicks(8082),
                            Name = "BigOne",
                            StartDate = new DateTime(2025, 6, 10, 12, 43, 21, 556, DateTimeKind.Local).AddTicks(7861)
                        },
                        new
                        {
                            TournamentId = 2,
                            EndDate = new DateTime(2025, 6, 17, 12, 43, 21, 556, DateTimeKind.Local).AddTicks(8327),
                            Name = "Small",
                            StartDate = new DateTime(2025, 6, 10, 12, 43, 21, 556, DateTimeKind.Local).AddTicks(8319)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
